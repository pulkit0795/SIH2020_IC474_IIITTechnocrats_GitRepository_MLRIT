# SAM Metric Tabulation : Developed by IIIT Technocrats, IIIT Sonepat
# SAM Metric Tabulation : Developed by IIIT Technocrats, IIIT Sonepat

import time


print('Please Enter total working days: ')
day_count=int(input())

strike=int(input())

if strike==1:

    mentor_id='Mentor 1'
    batch='2019'
    branch='IT'

else:
    print('Lacking Physical Server, Connection issues...\nPlease enter details: ')
    print('Enter Mentor ID')
    mentor_id = str(input())
    print('Enter Batch')
    batch = str(input())
    print('Enter Branch')
    branch = str(input())


print('Collecting Records...')
time.sleep(1)
print('Tabulating...')
time.sleep(1)
print('Preparing Results...')
time.sleep(1)
# Open the file in read mode
text = open("rolldb_sem.csv", "r")

# Create an empty dictionary
d = dict()

# Loop through each line of the file
for line in text:
    # Remove the leading spaces and newline character
    line = line.strip()

    # Convert the characters in line to
    # lowercase to avoid case mismatch
    line = line.lower()

    # Split the line into words
    words = line.split(",")

    # Iterate over each word in line
    for word in words:
        # Check if the word is already in dictionary
        if word in d:
            # Increment count of word by 1
            d[word] = d[word] + 1
        else:
            # Add the word to dictionary with count 1
            d[word] = 1

######### Creating PDF #######

from fpdf import FPDF


pdf = FPDF()


pdf.add_page()

pdf.set_font("Arial", size=15)
pdf.cell(270, 14, txt="Semester Attendance Metrics",
             ln=1,align='L')
pdf.cell(250, 12, txt="(Autogenerated by SAM)",
             ln=2,align='L')

pdf.cell(250, 12, txt="Total Working Days =" + str(day_count),
             ln=3,align='L')

pdf.cell(200, 10,
         txt='Roll No. \t\t\t\t No. of DP \t\t\t\t Precentage' ,
         ln=4, )
i=5

for key in list(d.keys()):


    pdf.cell(200, 10, txt=key+ " \t\t\t\t "+ str(d[key])+" \t\t\t\t\t\t\t\t\t\t\t\t\t\t "+str("{:.2f}".format(((d[key]/day_count)*100)))+"%",
             ln=i,)
    i=i+1

pdfname= mentor_id+'_'+batch+'_'+branch+'.pdf'
pdf.output(pdfname)



########### Sending pdf to Firebase #############

from google.cloud import storage
from firebase import firebase
import os
os.environ["GOOGLE_APPLICATION_CREDENTIALS"]="ServiceAcountKey.json"

client = storage.Client()
bucket = client.get_bucket('sih-2020-4962d.appspot.com')

# posting to firebase storage
imageBlob = bucket.blob("/")

imagePath = pdfname
imageBlob = bucket.blob(pdfname)
imageBlob.upload_from_filename(imagePath)


# SAM Metric Tabulation : Developed by IIIT Technocrats, IIIT Sonepat
# SAM Metric Tabulation : Developed by IIIT Technocrats, IIIT Sonepat